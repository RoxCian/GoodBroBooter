<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BootSettings" xml:space="preserve">
    <value>起動設定</value>
  </data>
  <data name="ApplicationPath" xml:space="preserve">
    <value>アプリパス</value>
  </data>
  <data name="ApplicationPathBanner" xml:space="preserve">
    <value>アプリファイルのパスを指定する...</value>
  </data>
  <data name="OptionMarkOn" xml:space="preserve">
    <value>オン</value>
  </data>
  <data name="OptionMarkOff" xml:space="preserve">
    <value>オフ</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>言語</value>
  </data>
  <data name="ConfiguratorPathDialogTitle" xml:space="preserve">
    <value>コンフィギュレータを選択する...</value>
  </data>
  <data name="ConfiguratorPathBanner" xml:space="preserve">
    <value>コンフィギュレータのパスを指定する...</value>
  </data>
  <data name="ConfiguratorPath" xml:space="preserve">
    <value>コンフィギュレータのパス</value>
  </data>
  <data name="AutoQuit" xml:space="preserve">
    <value>アプリ閉じたら終了</value>
  </data>
  <data name="AutoHide" xml:space="preserve">
    <value>アプリ開いたら非表示</value>
  </data>
  <data name="AutoBoot" xml:space="preserve">
    <value>Booter開いたらアプリを起動</value>
  </data>
  <data name="AdditionalTasks" xml:space="preserve">
    <value>追加タスク</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>Booterについて</value>
  </data>
  <data name="ShellStatement" xml:space="preserve">
    <value>シェルコマンド</value>
  </data>
  <data name="ApplicationPathDialogTitle" xml:space="preserve">
    <value>アプリファイルを選択する...</value>
  </data>
  <data name="ProcessName" xml:space="preserve">
    <value>プロセス名</value>
  </data>
  <data name="ProcessNameBanner" xml:space="preserve">
    <value>監視するプロセスの名を指定する...</value>
  </data>
  <data name="Resolution" xml:space="preserve">
    <value>解像度</value>
  </data>
  <data name="ResolutionXBanner" xml:space="preserve">
    <value>幅さ...</value>
  </data>
  <data name="ResolutionYBanner" xml:space="preserve">
    <value>高さ...</value>
  </data>
  <data name="ScreenOrientation" xml:space="preserve">
    <value>画面向き</value>
  </data>
  <data name="ScreenOrientationPortrait" xml:space="preserve">
    <value>縦向き</value>
  </data>
  <data name="ScreenOrientationLandscape" xml:space="preserve">
    <value>横向き</value>
  </data>
  <data name="ScreenOrientationFlippedPortrait" xml:space="preserve">
    <value>縦向き（反転）</value>
  </data>
  <data name="ScreenOrientationFlippedLandscape" xml:space="preserve">
    <value>横向き（反転）</value>
  </data>
  <data name="ShellAnotherTask" xml:space="preserve">
    <value>追加タスクのコマンド</value>
  </data>
  <data name="ShellAnotherTaskBanner" xml:space="preserve">
    <value>別のタスクを追加する...</value>
  </data>
  <data name="ShellPostTask" xml:space="preserve">
    <value>後処理タスクのコマンド</value>
  </data>
  <data name="ShellPostTaskBanner" xml:space="preserve">
    <value>アプリを閉じた後に実行するタスクを追加する...</value>
  </data>
  <data name="ShellStatementBanner" xml:space="preserve">
    <value>アプリ開くのコマンドを指定する...</value>
  </data>
  <data name="SystemLanguage" xml:space="preserve">
    <value>システム言語と同じ</value>
  </data>
  <data name="BootIt" xml:space="preserve">
    <value>起動する!!</value>
  </data>
  <data name="OpenConfigurator" xml:space="preserve">
    <value>コンフィグ</value>
  </data>
  <data name="BooterSettings" xml:space="preserve">
    <value>Booter設定</value>
  </data>
  <data name="BootStop" xml:space="preserve">
    <value>停止する</value>
  </data>
  <data name="VbOk" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="VbCancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="VbRetry" xml:space="preserve">
    <value>リトライ</value>
  </data>
  <data name="VbIgnore" xml:space="preserve">
    <value>無視する</value>
  </data>
  <data name="VbAbort" xml:space="preserve">
    <value>中止する</value>
  </data>
  <data name="VbYes" xml:space="preserve">
    <value>はい</value>
  </data>
  <data name="VbNo" xml:space="preserve">
    <value>いいえ</value>
  </data>
  <data name="OpenApplicationFilterDescription" xml:space="preserve">
    <value>実行可能ファイル|すべてのファイル</value>
  </data>
  <data name="QuitMessage" xml:space="preserve">
    <value>Booterを閉じますが？</value>
  </data>
  <data name="QuitMessageTitle" xml:space="preserve">
    <value>終了</value>
  </data>
  <data name="OpenConfiguratorFailedMessage" xml:space="preserve">
    <value>コンフィギュレータを開くことができません。</value>
  </data>
  <data name="OpenConfiguratorFailedMessageTitle" xml:space="preserve">
    <value>コンフィギュレータ開く失敗</value>
  </data>
  <data name="OpenConfiguratorAsAdminMessage" xml:space="preserve">
    <value>管理者としてBooterを実行してコンフィギュレータを開きます。</value>
  </data>
  <data name="BootFailedMessageTitle" xml:space="preserve">
    <value>起動失敗</value>
  </data>
  <data name="BootFailedMessage" xml:space="preserve">
    <value>アプリを起動できません。</value>
  </data>
  <data name="BootAsAdminMessage" xml:space="preserve">
    <value>管理者としてBooterを実行してアプリを起動します。</value>
  </data>
  <data name="BootPathNeededMessage" xml:space="preserve">
    <value>アプリのパスまたはシェルコマンドが指定されていません。</value>
  </data>
  <data name="BootFailedWhileSetDevModeMessage" xml:space="preserve">
    <value>解像度・画面向きまたはリフレッシュレートが設定できません。</value>
  </data>
  <data name="PostProcessingFailedMessage" xml:space="preserve">
    <value>後処理タスクを開始できません。</value>
  </data>
  <data name="PostProcessingFailedMessageTitle" xml:space="preserve">
    <value>後処理が失敗</value>
  </data>
  <data name="PostProcessingFailedWhileSetDevModeMessage" xml:space="preserve">
    <value>解像度・画面向きまたはリフレッシュレートが還元できません。</value>
  </data>
  <data name="MenuStop" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="MenuExit" xml:space="preserve">
    <value>終了</value>
  </data>
  <data name="BootFileNotFoundMessage" xml:space="preserve">
    <value>アプリを起動するファイルが見つかりません。</value>
  </data>
  <data name="DelayToMonitorProcess" xml:space="preserve">
    <value>プロセスを監視するための遅延</value>
  </data>
  <data name="MaxRetryCountForProcessMonitoring" xml:space="preserve">
    <value>監視のため最大リトライ回数</value>
  </data>
  <data name="RetryIntervalForProcessMonitoring" xml:space="preserve">
    <value>プロセス監視のため再試行間隔</value>
  </data>
  <data name="MillisecondBanner" xml:space="preserve">
    <value>ミリ秒...</value>
  </data>
  <data name="CountsBanner" xml:space="preserve">
    <value>回数...</value>
  </data>
  <data name="ProcessPriorityClass" xml:space="preserve">
    <value>プロセス優先順位</value>
  </data>
  <data name="ProcessPriorityClassNormal" xml:space="preserve">
    <value>通常</value>
  </data>
  <data name="ProcessPriorityClassAboveNormal" xml:space="preserve">
    <value>通常より高い</value>
  </data>
  <data name="ProcessPriorityClassBelowNormal" xml:space="preserve">
    <value>通常より低い</value>
  </data>
  <data name="ProcessPriorityClassIdle" xml:space="preserve">
    <value>低い</value>
  </data>
  <data name="ProcessPriorityClassHigh" xml:space="preserve">
    <value>高い</value>
  </data>
  <data name="ProcessPriorityClassRealTime" xml:space="preserve">
    <value>リアルタイム</value>
  </data>
  <data name="CutMenuHeader" xml:space="preserve">
    <value>切り取り</value>
  </data>
  <data name="CopyMenuHeader" xml:space="preserve">
    <value>コピー</value>
  </data>
  <data name="PasteMenuHeader" xml:space="preserve">
    <value>貼り付け</value>
  </data>
  <data name="DisplayFrequency" xml:space="preserve">
    <value>リフレッシュレート</value>
  </data>
  <data name="DisplayFrequencyBanner" xml:space="preserve">
    <value>頻度...</value>
  </data>
</root>