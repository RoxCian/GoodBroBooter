<Application x:Class="Application"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:GoodBroBooter"
             xmlns:resx="clr-namespace:GoodBroBooter.My.Resources" xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:s="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <WindowChrome x:Key="WindowChrome" NonClientFrameEdges="None" CaptionHeight="40" UseAeroCaptionButtons="True" GlassFrameThickness="0 0 0 1" CornerRadius="0"/>
        <Duration x:Key="AnimationDuration">0:0:0.15</Duration>
        <KeyTime x:Key="AnimationTime">0:0:0.15</KeyTime>

        <local:EnumValueConverter x:Key="EnumValueConverter"/>
        <local:InvertConverter x:Key="InvertConverter"/>
        <local:PriorityIndexToPriorityClassEnumConverter x:Key="PriorityConverter"/>
        <local:ThemedColorConverter x:Key="ThemedColorConverter"/>

        <Color x:Key="SelectedColor">#3399ff</Color>
        <Color x:Key="SelectedHoveredColor">#58b4ff</Color>
        <Color x:Key="HoveredColor">#7dd3f9</Color>
        <Color x:Key="DefaultColor">#666666</Color>
        <Color x:Key="DefaultBackgroundColor">#ffffff</Color>
        <Color x:Key="DefaultForegroundColor">#000000</Color>
        <!--<local:ThemedColor x:Key="DefaultBackgroundColor" LightColor="{StaticResource DefaultBackgroundColorLight}" DarkColor="{StaticResource DefaultBackgroundColorDark}"/>
        <local:ThemedColor x:Key="DefaultForegroundColor" LightColor="{StaticResource DefaultForegroundColorLight}" DarkColor="{StaticResource DefaultForegroundColorDark}"/>-->
        <Color x:Key="DefaultHoveredColor">#999999</Color>
        <Color x:Key="SelectedCriticalColor">#ff0000</Color>
        <Color x:Key="HoveredCriticalColor">#ffe0e0</Color>
        <Color x:Key="ButtonPressedBorderColor">#1379df</Color>
        <Color x:Key="ButtonPressedCriticalBorderColor">#cc0000</Color>
        <Color x:Key="ButtonMouseOverBackgroundColor">#ddefff</Color>
        <Color x:Key="ButtonPressedBackgroundColor">#DAECFC</Color>
        <Color x:Key="ButtonPressedCriticalBackgroundColor">#fcdddd</Color>
        <Color x:Key="DisabledBackgroundColor">#F0F0F0</Color>
        <Color x:Key="MenuItemBackgroundColor">#F9F9F9</Color>
        <Color x:Key="MenuGestureForegroundColor">#606060</Color>
        <Color x:Key="DisabledBorderColor">#D9D9D9</Color>
        <Color x:Key="FocusLostedBorderColor">#b0b0b0</Color>

        <SolidColorBrush x:Key="SelectedBrush" Color="{StaticResource SelectedColor}"/>
        <SolidColorBrush x:Key="HoveredBrush" Color="{StaticResource HoveredColor}"/>
        <SolidColorBrush x:Key="DefaultBrush" Color="{StaticResource DefaultColor}"/>
        <SolidColorBrush x:Key="DefaultBackgroundBrush" Color="{StaticResource DefaultBackgroundColor}"/>
        <SolidColorBrush x:Key="DefaultForegroundBrush" Color="{StaticResource DefaultForegroundColor}"/>

        <SolidColorBrush x:Key="SelectedCriticalBrush" Color="{StaticResource SelectedCriticalColor}"/>
        <SolidColorBrush x:Key="HoveredCriticalBrush" Color="{StaticResource HoveredCriticalColor}"/>
        <SolidColorBrush x:Key="ButtonMouseOverBackgroundBrush" Color="{StaticResource ButtonMouseOverBackgroundColor}"/>
        <SolidColorBrush x:Key="ButtonPressedBackgroundBrush" Color="{StaticResource ButtonPressedBackgroundColor}"/>
        <SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="{StaticResource ButtonPressedBorderColor}"/>
        <SolidColorBrush x:Key="ButtonPressedCriticalBorderBrush" Color="{StaticResource ButtonPressedCriticalBorderColor}"/>
        <SolidColorBrush x:Key="ButtonPressedCriticalBackgroundBrush" Color="{StaticResource ButtonPressedCriticalBackgroundColor}"/>
        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="{StaticResource DisabledBackgroundColor}"/>
        <SolidColorBrush x:Key="MenuItemBackgroundBrush" Color="{StaticResource MenuItemBackgroundColor}"/>
        <SolidColorBrush x:Key="MenuGestureForegroundBrush" Color="{StaticResource MenuGestureForegroundColor}"/>
        <SolidColorBrush x:Key="DisabledBorderBrush" Color="{StaticResource DisabledBorderColor}"/>

        <ControlTemplate x:Key="WindowTemplate" TargetType="Window">
            <ControlTemplate.Resources>
                <Style x:Key="TitleButtonStyle" TargetType="local:ColorizedButton">
                    <Style.Triggers>
                        <Trigger Property="Tag" Value="False">
                            <Trigger.Setters>
                                <Setter Property="Foreground" Value="#cccccc"/>
                            </Trigger.Setters>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </ControlTemplate.Resources>
            <AdornerDecorator>
                <Grid>
                    <Grid Background="{StaticResource DefaultBackgroundBrush}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40"/>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.Style>
                            <Style TargetType="Grid">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Value="{x:Static WindowState.Maximized}">
                                        <Setter Property="Margin" Value="6"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <TextBlock x:Name="TitleTextBlock" Text="{TemplateBinding Title}" FontSize="16" Foreground="{StaticResource  SelectedBrush}" VerticalAlignment="Center" Margin="4 0 0 0" Grid.Column="0"/>
                        <StackPanel Orientation="Horizontal" FlowDirection="RightToLeft" Grid.Column="1">
                            <local:ColorizedButton x:Name="MinimizeButton" VerticalAlignment="Stretch" HorizontalAlignment="Right" Foreground="{StaticResource DefaultForegroundBrush}" Content="x" FontWeight="ExtraBold" FontSize="16" Width="40" Background="{StaticResource DefaultBackgroundBrush}" BorderThickness="0" Click="HandleToExitButtonClicked" WindowChrome.IsHitTestVisibleInChrome="True" IsTabStop="False"  MouseOverBackground="{StaticResource  SelectedCriticalBrush}" PressedBackground="{StaticResource  ButtonPressedCriticalBorderBrush}" Style="{StaticResource TitleButtonStyle}" Tag="{TemplateBinding IsActive}"/>
                            <local:ColorizedButton x:Name="CloseButton" VerticalAlignment="Stretch" HorizontalAlignment="Right" Foreground="{StaticResource DefaultForegroundBrush}" Content="▁" FontSize="14" Width="40" Background="{StaticResource DefaultBackgroundBrush}" BorderThickness="0" Click="HandleToHideButtonClicked" WindowChrome.IsHitTestVisibleInChrome="True" IsTabStop="False" ContentMargin="0 0 0 5" MouseOverBackground="{StaticResource  SelectedBrush}" PressedBackground="#1177dd" Style="{StaticResource TitleButtonStyle}" Tag="{TemplateBinding IsActive}"/>
                        </StackPanel>
                        <ContentPresenter Content="{TemplateBinding Content}" Grid.Row="1" Grid.ColumnSpan="2"/>
                    </Grid>
                </Grid>
            </AdornerDecorator>
            <ControlTemplate.Triggers>
                <Trigger Property="IsActive" Value="False">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="TitleTextBlock" To="{StaticResource FocusLostedBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="MinimizeButton" To="{StaticResource FocusLostedBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="CloseButton" To="{StaticResource FocusLostedBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="TitleTextBlock" Duration="{StaticResource AnimationDuration}"/>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="MinimizeButton" Duration="{StaticResource AnimationDuration}"/>
                                <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="CloseButton" Duration="{StaticResource AnimationDuration}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="TabItemHeaderTemplate" TargetType="TabItem">
            <Grid Name="TabItemHeaderGrid" Background="{StaticResource  DefaultBrush}" Margin="-2 0 0 0" HorizontalAlignment="Stretch">
                <Border Name="TabItemHeaderBorder" BorderThickness="5 0 0 0" BorderBrush="{StaticResource  DefaultBrush}" />
                <ContentControl IsTabStop="False" Name="TabItemHeaderContent" Content="{TemplateBinding Header}" Foreground="{StaticResource DefaultBackgroundBrush}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8 0 4 0"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="TabItemHeaderBorder" Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                <ColorAnimation Storyboard.TargetName="TabItemHeaderGrid" Storyboard.TargetProperty="Background.Color" To="{StaticResource DefaultBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                <ColorAnimation Storyboard.TargetName="TabItemHeaderContent" Storyboard.TargetProperty="Foreground.Color" To="{StaticResource DefaultForegroundColor}" Duration="{StaticResource AnimationDuration}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="TabItemHeaderBorder" Storyboard.TargetProperty="BorderBrush.Color" Duration="{StaticResource AnimationDuration}"/>
                                <ColorAnimation Storyboard.TargetName="TabItemHeaderGrid" Storyboard.TargetProperty="Background.Color" Duration="{StaticResource AnimationDuration}"/>
                                <ColorAnimation Storyboard.TargetName="TabItemHeaderContent" Storyboard.TargetProperty="Foreground.Color" Duration="{StaticResource AnimationDuration}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsSelected" Value="False"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="TabItemHeaderBorder" Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource DefaultHoveredColor}" Duration="{StaticResource AnimationDuration}"/>
                                <ColorAnimation Storyboard.TargetName="TabItemHeaderGrid" Storyboard.TargetProperty="Background.Color" To="{StaticResource DefaultHoveredColor}" Duration="{StaticResource AnimationDuration}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="TabItemHeaderBorder" Storyboard.TargetProperty="BorderBrush.Color" Duration="{StaticResource AnimationDuration}"/>
                                <ColorAnimation Storyboard.TargetName="TabItemHeaderGrid" Storyboard.TargetProperty="Background.Color" Duration="{StaticResource AnimationDuration}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ButtonStyle" TargetType="local:ColorizedButton">
            <Setter Property="BorderThickness" Value="0 0 0 2"/>
            <Setter Property="MouseOverBackground" Value="{StaticResource  ButtonMouseOverBackgroundBrush}"/>
            <Setter Property="MouseOverForeground" Value="{StaticResource  SelectedBrush}"/>
            <Setter Property="MouseOverBorderBrush" Value="{StaticResource  SelectedBrush}"/>
            <Setter Property="PressedBackground" Value="{StaticResource  ButtonPressedBackgroundBrush}"/>
            <Setter Property="PressedForeground" Value="{StaticResource  ButtonPressedBorderBrush}"/>
            <Setter Property="PressedBorderBrush" Value="{StaticResource  ButtonPressedBorderBrush}"/>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Background" Color="#FFE5E5E5"/>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <Grid>
                                <ContentControl x:Name="ComboBoxToggleButtonContent" Foreground="{TemplateBinding Foreground}" 
                                    ContentTemplate="{Binding SelectionBoxItemTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}" 
                                    Content="{Binding SelectionBoxItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}" 
                                    ContentTemplateSelector="{Binding ItemTemplateSelector, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}" 
                                    ContentStringFormat="{Binding SelectionBoxItemStringFormat, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}" 
                                    HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}" IsHitTestVisible="false" 
                                    Margin="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}" 
                                    VerticalAlignment="{Binding VerticalAlignment, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}"
                                    Focusable="False"/>
                                <Border x:Name="splitBorder" BorderThickness="0" BorderBrush="Transparent" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                    <Path x:Name="arrow" Data="F1 M 0,0 L 4,4 L 8,0 L 8,-2.173 L 4,1.328 L 0,-2.173 L 0,0 Z" Fill="{StaticResource  DefaultBrush}" HorizontalAlignment="Center" Margin="0 4 0 0" VerticalAlignment="Center"/>
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="Transparent" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="arrow" To="{StaticResource DefaultBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource DefaultBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="arrow" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="{StaticResource ButtonMouseOverBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="arrow" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="arrow" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="{StaticResource ButtonPressedBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource ButtonPressedBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="arrow" To="{StaticResource ButtonPressedBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource ButtonPressedBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="arrow" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="False"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" To="{StaticResource DisabledBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource DisabledBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="arrow" To="{StaticResource DisabledBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource DisabledBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.EnterActions>
                                <MultiDataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="arrow" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiDataTrigger.ExitActions>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DropShadowEffect x:Key="ComboBoxPopupShadowEffect" BlurRadius="6" Direction="-45" Color="Black" Opacity="0.4" ShadowDepth="3"/>
        <DropShadowEffect x:Key="ComboBoxToggleButtonShadowEffect" BlurRadius="6" Direction="-45" Color="Black" Opacity="0" ShadowDepth="3"/>
        
        <ItemsPanelTemplate x:Key="ContextMenuItemsPanelTemplate">
            <StackPanel IsItemsHost="True" Background="Transparent" Effect="{StaticResource ComboBoxPopupShadowEffect}"/>
        </ItemsPanelTemplate>
        <local:AddValueConverter x:Key="ComboBoxPopupWidthAdder" Operand="3"/>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" HorizontalAlignment="Left" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="Fade" MinWidth="{Binding ActualWidth, ElementName=templateRoot, Converter={StaticResource ComboBoxPopupWidthAdder}}" MaxHeight="{TemplateBinding MaxDropDownHeight}" ClipToBounds="False">
                    <Border x:Name="dropDownBorder" Margin="0 0 8 8" Background="Transparent" BorderThickness="0" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" ClipToBounds="False" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Effect="{x:Null}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled" Background="Transparent">
                                <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Border x:Name="opaqueBorder" Width="{Binding ActualWidth, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Background="Transparent" BorderThickness="0" BorderBrush="{StaticResource  DefaultBrush}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" Effect="{StaticResource ComboBoxToggleButtonShadowEffect}" SnapsToDevicePixels="True"/>
            </Grid>
           
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Effect" TargetName="dropDownBorder" Value="{StaticResource ComboBoxPopupShadowEffect}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="HasDropShadow" SourceName="PART_Popup" Value="True"/>
                        <Condition Property="IsDropDownOpen" Value="True"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Effect.Opacity" Storyboard.TargetName="toggleButton" To="0.4" Duration="{StaticResource AnimationDuration}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="Effect.Opacity" Storyboard.TargetName="toggleButton" Duration="{StaticResource AnimationDuration}"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueBorder" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueBorder" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource  DefaultBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        </Style>
        <Style x:Key="ComboBoxItemContainerStyle" TargetType="ComboBoxItem">
            <Setter Property="Margin" Value="0 0 3 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border x:Name="ComboBoxItemBorder" BorderThickness="3 0 0 0" BorderBrush="{StaticResource  DefaultBrush}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="{StaticResource DefaultBackgroundBrush}" Panel.ZIndex="0">
                            <Grid>
                                <StackPanel Orientation="Horizontal">
                                    <ContentControl x:Name="ComboBoxItemContent" Background="{StaticResource DefaultBackgroundBrush}" Content="{TemplateBinding Content}" Margin="5 3 0 3" Focusable="False" IsEnabled="{TemplateBinding IsEnabled}"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" To="3 0 0 0" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" TargetName="ComboBoxItemContent" Value="{StaticResource  DisabledBorderBrush}"/>
                                <Setter Property="BorderBrush" TargetName="ComboBoxItemBorder" Value="{StaticResource  DisabledBorderBrush}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" TargetName="ComboBoxItemContent" Value="{StaticResource DefaultBackgroundBrush}"/>
                                <Setter Property="Background" TargetName="ComboBoxItemBorder" Value="{StaticResource  DisabledBorderBrush}"/>
                                <Setter Property="BorderBrush" TargetName="ComboBoxItemBorder" Value="{StaticResource  DisabledBorderBrush}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsHighlighted" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsEnabled" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource DefaultBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="Background.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="BorderBrush.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="Background.Color" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsHighlighted" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsEnabled" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="Background.Color" To="{StaticResource DefaultBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="BorderBrush.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="Background.Color" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsHighlighted" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsEnabled" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource DefaultBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="Background.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="BorderBrush.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="Background.Color" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsHighlighted" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsEnabled" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource DefaultBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="Background.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="BorderBrush.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="Background.Color" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsHighlighted" Value="True"/>
                                    <Condition Property="IsSelected" Value="False"/>
                                    <Condition Property="IsEnabled" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="Background.Color" To="{StaticResource DefaultBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="BorderBrush.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="Background.Color" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsHighlighted" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                    <Condition Property="IsEnabled" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource DefaultBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="Background.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="BorderBrush.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="ComboBoxItemBorder" Storyboard.TargetProperty="Background.Color" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ContextMenuTemplate" TargetType="ContextMenu">
            <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Margin="{TemplateBinding Margin}" Opacity="{TemplateBinding Opacity}">
                <ItemsPresenter Margin="0 0 6 6"/>
            </Border>
        </ControlTemplate>
        <Style x:Key="MenuItemContainerStyle" TargetType="MenuItem">
            <Setter Property="Margin" Value="0 0 3 0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border x:Name="MenuItemBorder" BorderThickness="3 0 0 0" BorderBrush="{StaticResource  DefaultBrush}" Background="{StaticResource  MenuItemBackgroundBrush}" Panel.ZIndex="0">
                            <Grid Margin="0 3 0 3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25*"/>
                                    <ColumnDefinition Width="10*"/>
                                </Grid.ColumnDefinitions>
                                <ContentControl x:Name="MenuItemContent" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Focusable="False" Margin="5 3 20 3" IsEnabled="{TemplateBinding IsEnabled}" Grid.Column="0"/>
                                <ContentControl x:Name="MenuItemGesture" Content="{TemplateBinding InputGestureText}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Focusable="False" Margin="0 3 10 3" IsEnabled="{TemplateBinding IsEnabled}" Foreground="{StaticResource  MenuGestureForegroundBrush}" Grid.Column="1"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" To="3 0 0 0" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="Margin" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" TargetName="MenuItemContent" Value="{StaticResource  DisabledBorderBrush}"/>
                                <Setter Property="Foreground" TargetName="MenuItemGesture" Value="{StaticResource  DisabledBorderBrush}"/>
                                <Setter Property="BorderBrush" TargetName="MenuItemBorder" Value="{StaticResource  DisabledBorderBrush}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsHighlighted" Value="True"/>
                                    <Condition Property="IsEnabled" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="MenuItemBorder" Storyboard.TargetProperty="BorderBrush.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource DefaultBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="MenuItemGesture" Storyboard.TargetProperty="Foreground.Color" To="{StaticResource DefaultBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="MenuItemBorder" Storyboard.TargetProperty="Background.Color" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="MenuItemBorder" Storyboard.TargetProperty="BorderBrush.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="MenuItemGesture" Storyboard.TargetProperty="Foreground.Color" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetName="MenuItemBorder" Storyboard.TargetProperty="Background.Color" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                    <!--<ControlTemplate TargetType="MenuItem">
                        <Grid SnapsToDevicePixels="True">
                            <Rectangle RadiusX="2" RadiusY="2" Fill="{TemplateBinding Panel.Background}" Stroke="{TemplateBinding Border.BorderBrush}" StrokeThickness="1" Name="Bg" />
                            <Rectangle RadiusX="2" RadiusY="2" Stroke="#00FFFFFF" StrokeThickness="1" Name="InnerBorder" Margin="1,1,1,1" />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" />
                                    <ColumnDefinition Width="4" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="37" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                    <ColumnDefinition Width="17" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Content="{TemplateBinding MenuItem.Icon}" ContentSource="Icon" Name="Icon" Margin="1,1,1,1" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                <Border BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" BorderBrush="#FFCDD3E6" Background="#FFE6EFF4" Name="GlyphPanel" Width="22" Height="22" Margin="1,1,1,1" Visibility="Hidden">
                                    <Path Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="#FF0C12A1" Name="Glyph" Width="9" Height="11" FlowDirection="LeftToRight" />
                                </Border>
                                <ContentPresenter RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.Column="2" />
                                <TextBlock Text="{TemplateBinding MenuItem.InputGestureText}" Margin="{TemplateBinding Control.Padding}" Visibility="Collapsed" Grid.Column="4" />
                                <Path Data="M0,0L4,3.5 0,7z" Fill="{TemplateBinding TextElement.Foreground}" Margin="4,0,0,0" VerticalAlignment="Center" Grid.Column="5" />
                            </Grid>
                            <Popup IsOpen="False" Placement="Right" HorizontalOffset="-2" VerticalOffset="-3" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" AllowsTransparency="True" Name="PART_Popup" Focusable="False">
                                <mwt:SystemDropShadowChrome Color="#00FFFFFF" Name="Shdw">
                                    <ContentControl IsTabStop="False" Template="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=FrameworkElement, ResourceId=SubmenuContent}}" Name="SubMenuBorder">
                                        <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly=FrameworkElement, ResourceId=MenuScrollViewer}}">
                                            <ItemsPresenter Margin="2,2,2,2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" />
                                        </ScrollViewer>
                                    </ContentControl>
                                </mwt:SystemDropShadowChrome>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="MenuItem.IsSuspendingPopupAnimation">
                                <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="{x:Static PopupAnimation.None}" />
                                <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="MenuItem.IsHighlighted">
                                <Setter TargetName="InnerBorder" Property="Shape.Stroke">
                                    <Setter.Value>
                                        <SolidColorBrush>#D1DBF4FF</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="MenuItem.Icon">
                                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="{x:Static Visibility.Collapsed}" />
                                <Trigger.Value>
                                    <x:Null />
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="MenuItem.IsChecked">
                                <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="{x:Static Visibility.Visible}" />
                                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="{x:Static Visibility.Collapsed}" />
                                <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup">
                                <Setter TargetName="Shdw" Property="FrameworkElement.Margin">
                                    <Setter.Value>
                                        <Thickness>0,0,5,5</Thickness>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Shdw" Property="mwt:SystemDropShadowChrome.Color">
                                    <Setter.Value>
                                        <Color>#71000000</Color>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="MenuItem.IsHighlighted">
                                <Setter TargetName="Bg" Property="Shape.Fill">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <LinearGradientBrush.GradientStops>
                                                <GradientStop Color="#34C5EBFF" Offset="0" />
                                                <GradientStop Color="#3481D8FF" Offset="1" />
                                            </LinearGradientBrush.GradientStops>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Bg" Property="Shape.Stroke">
                                    <Setter.Value>
                                        <SolidColorBrush>#8571CBF1</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>True</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled">
                                <Setter Property="TextElement.Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush>#FF9A9A9A</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="GlyphPanel" Property="Panel.Background">
                                    <Setter.Value>
                                        <SolidColorBrush>#FFEEE9E9</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="GlyphPanel" Property="Border.BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush>#FFDBD6D6</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="Glyph" Property="Shape.Fill">
                                    <Setter.Value>
                                        <SolidColorBrush>#FF848589</SolidColorBrush>
                                    </Setter.Value>
                                </Setter>
                                <Trigger.Value>
                                    <s:Boolean>False</s:Boolean>
                                </Trigger.Value>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>-->
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="TabControlStyle" TargetType="TabControl">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TabPanel x:Name="HeaderPanel" Grid.Column="0" Panel.ZIndex="1" Margin="0 0 4 0" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Background="{StaticResource  DefaultBrush}"/>
                            <Border x:Name="Border" Grid.Column="1" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2">
                                <ContentPresenter Margin="4" ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource DefaultBackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource  DefaultBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="0" VerticalAlignment="{TemplateBinding VerticalAlignment}">
                                <Grid x:Name="markGrid" SnapsToDevicePixels="True" MinWidth="16">
                                    <TextBlock x:Name="optionMarkOff" Text="{Binding Source={x:Static local:LocalizationHelper.Service}, Path=Localization.OptionMarkOff}" Foreground="{StaticResource DefaultForegroundBrush}" Margin="1" Opacity="1" HorizontalAlignment="Center" SnapsToDevicePixels="True"/>
                                    <TextBlock x:Name="optionMarkOn" Text="{Binding Source={x:Static local:LocalizationHelper.Service}, Path=Localization.OptionMarkOn}" Foreground="{StaticResource DefaultBackgroundBrush}" Margin="1" Opacity="0" HorizontalAlignment="Center" SnapsToDevicePixels="True"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{StaticResource DefaultForegroundBrush}" Margin="2" Opacity="0" SnapsToDevicePixels="True"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                    <Condition Property="IsEnabled" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="checkBoxBorder" To="{StaticResource ButtonMouseOverBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Storyboard.TargetName="checkBoxBorder" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="optionMarkOff" To="{StaticResource SelectedColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="indeterminateMark" To="{StaticResource ButtonMouseOverBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="checkBoxBorder" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Storyboard.TargetName="checkBoxBorder" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="optionMarkOff" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="indeterminateMark" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="IsEnabled" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="checkBoxBorder" To="{StaticResource SelectedHoveredColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Storyboard.TargetName="checkBoxBorder" To="{StaticResource SelectedHoveredColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="indeterminateMark" To="{StaticResource SelectedHoveredColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="checkBoxBorder" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Storyboard.TargetName="checkBoxBorder" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="indeterminateMark" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="checkBoxBorder" To="{StaticResource DisabledBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Storyboard.TargetName="checkBoxBorder" To="{StaticResource DisabledBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="optionMarkOn" To="{StaticResource DefaultBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="optionMarkOff" To="{StaticResource DisabledBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="indeterminateMark" To="{StaticResource DisabledBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="checkBoxBorder" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Storyboard.TargetName="checkBoxBorder" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="optionMarkOn" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="optionMarkOff" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="indeterminateMark" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsPressed" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="checkBoxBorder" To="{StaticResource ButtonPressedBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Storyboard.TargetName="checkBoxBorder" To="{StaticResource ButtonPressedBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="optionMarkOff" To="{StaticResource ButtonPressedBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="indeterminateMark" To="{StaticResource ButtonPressedBackgroundColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="checkBoxBorder" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Storyboard.TargetName="checkBoxBorder" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Storyboard.TargetName="optionMarkOff" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="indeterminateMark" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsPressed" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="checkBoxBorder" To="{StaticResource ButtonPressedBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Storyboard.TargetName="checkBoxBorder" To="{StaticResource ButtonPressedBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="indeterminateMark" To="{StaticResource ButtonPressedBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetProperty="Background.Color" Storyboard.TargetName="checkBoxBorder" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color" Storyboard.TargetName="checkBoxBorder" Duration="{StaticResource AnimationDuration}"/>
                                            <ColorAnimation Storyboard.TargetProperty="Fill.Color" Storyboard.TargetName="indeterminateMark" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="{StaticResource  SelectedBrush}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource  SelectedBrush}"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="optionMarkOn" To="1" Duration="{StaticResource AnimationDuration}"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="optionMarkOff" To="0" Duration="{StaticResource AnimationDuration}"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="indeterminateMark" To="0" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="optionMarkOn" Duration="{StaticResource AnimationDuration}"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="optionMarkOff" Duration="{StaticResource AnimationDuration}"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="indeterminateMark" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="optionMarkOn" To="0" Duration="{StaticResource AnimationDuration}"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="optionMarkOff" To="1" Duration="{StaticResource AnimationDuration}"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="indeterminateMark" To="1" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="optionMarkOn" Duration="{StaticResource AnimationDuration}"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="optionMarkOff" Duration="{StaticResource AnimationDuration}"/>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="indeterminateMark" Duration="{StaticResource AnimationDuration}"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CanDisableTextBlockStyle" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMonitoring, ElementName=TheWindow}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <BeginStoryboard.Storyboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Foreground.Color" To="{StaticResource DisabledBorderColor}" Duration="{StaticResource AnimationDuration}"/>
                                </Storyboard>
                            </BeginStoryboard.Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <BeginStoryboard.Storyboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetProperty="Foreground.Color" Duration="{StaticResource AnimationDuration}"/>
                                </Storyboard>
                            </BeginStoryboard.Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
